{
  "name": "nmea",
  "description": "A parser for the NMEA 0183 GPS Receiver protocol",
  "version": "0.0.3",
  "author": {
    "name": "James Penn",
    "email": "james@jamespenn.co.uk"
  },
  "main": "nmea",
  "keywords": [
    "gps",
    "nmea"
  ],
  "repository": {
    "type": "git",
    "url": "git://github.com/jamesp/node-nmea"
  },
  "readme": "A NMEA-0183 GPS Protocol parser\n===============================\n\nAn example using the node-serialport library to read a stream of messages\nfrom a GlobalSat BU-353 USB GPS receiver:\n\n````\nvar serialport = require('serialport');\nvar nmea = require('nmea');\n\nvar port = new serialport.SerialPort('/dev/cu.usbserial', {\n                baudrate: 4800,\n                parser: serialport.parsers.readline('\\r\\n')});\n    \nport.on('data', function(line) {\n    console.log(nmea.parse(line));\n});\n\n// { type: 'active-satellites',\n//   selectionMode: 'A',\n//   mode: 1,\n//   satellites: [ 29, 18, 21 ],\n//   PDOP: '',\n//   HDOP: '',\n//   VDOP: '',\n//   talker_id: 'GP' }\n// { type: 'satellite-list-partial',\n//   numMsgs: 3,\n//   msgNum: 1,\n//   satsInView: 11,\n//   satellites: \n//    [ { id: '18', elevationDeg: 7, azimuthTrue: 214, SNRdB: 43 },\n//      { id: '21', elevationDeg: 5, azimuthTrue: 114, SNRdB: 34 },\n//      { id: '26', elevationDeg: 71, azimuthTrue: 234, SNRdB: 0 } ],\n//   talker_id: 'GP' }\n\n````",
  "readmeFilename": "README.md",
  "_id": "nmea@0.0.3",
  "dist": {
    "shasum": "7d1e4ae635e3039f75ac7c19879a1584941c3ffb"
  },
  "_from": "nmea@git://github.com/jamesp/node-nmea"
}
